// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// NextAuth Models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("user") // "user" | "admin"
  password      String?   // Nullable - null for Google OAuth users
  authProvider  String    @default("google") // "google" | "credentials"
  accounts      Account[]
  sessions      Session[]
  bookings      Booking[] // Relation to bookings
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// StudyRooms Custom Models
model Room {
  id          String    @id @default(cuid())
  name        String
  category    String // 'small' or 'large'
  capacity    Int
  description String?
  bookings    Booking[] // Relation to bookings
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Booking {
  id        String   @id @default(cuid())
  userId    String
  roomId    String
  date      DateTime
  startTime String // Store as 24-hour format (e.g., "14:00")
  duration  Int // Duration in minutes
  status    String   @default("confirmed") // confirmed, cancelled, completed
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([roomId])
  @@index([date])
}
